class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> list = new ArrayList<>();
        HashMap<Character,Integer> map = new HashMap<Character,Integer>(); 
        
        for(int i = 0 ; i < p.length() ; i++){
            if(map.containsKey(p.toCharArray()[i])){
                 map.put(p.toCharArray()[i],map.get(p.toCharArray()[i])+1);
            }
            else{
                 map.put(p.toCharArray()[i],1);
            }
        }    
        //System.out.println(map.values().toString());
        
        for(int i =0; i < s.length()-p.length()+1;i++){
            HashMap<Character,Integer> map2 = new HashMap<Character,Integer>(); 
            for(int j =0; j < p.length() ; j ++){
            if(!map.containsKey(s.toCharArray()[i+j])){
                break;
            }
            if(map2.containsKey(s.toCharArray()[i+j])){
                 map2.put(s.toCharArray()[i+j],map2.get(s.toCharArray()[i+j])+1);
            }
            else{
                 map2.put(s.toCharArray()[i+j],1);
            }
            }
            //System.out.print(Integer.toString(i) + " ");
            //System.out.println(map2.keySet().toString());
            if(map.equals(map2)){
                list.add(i);
            }
        }
        
        
        
        
        return list;
    }
}
